{"version":3,"sources":["components/HOC/HOC.js","components/reduxForm/contactForm.js","components/reduxForm/reduxForm.js","components/counter/counter.js","actions/index.js","components/propsSharing/child.js","components/propsSharing/parent.js","components/propsSharing/propsSharing.js","components/ref/ref.js","App.js","serviceWorker.js","reducers/index.js","reducers/counterReducer.js","index.js"],"names":["ComposedComponent","required","value","undefined","email","test","renderField","input","label","type","className","meta","touched","error","warning","placeholder","ContactForm","props","min","max","handleSubmit","submitting","Fragment","onSubmit","Field","id","name","component","validate","length","htmlFor","disabled","reduxForm","form","val","alert","JSON","stringify","state","this","Component","newData","data","profile","MyComponent","empData","map","item","index","key","MyHOC","setState","Counter","counterReducer","onClick","incrementCounterAction","decrementCounterAction","mapDispatchToProps","payload","connect","Child","childData","onKeyUp","e","childHandler","target","parentData","Parent","dataToChild","dataFromChild","PropsSharing","Ref","inputRef","React","createRef","current","focus","ref","focusInput","App","submitForm","values","console","log","activeClassName","to","path","ReduxForm","HOC","Boolean","window","location","hostname","match","rootReducers","combineReducers","formReducer","action","store","createStore","rootReducer","subscribe","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e31ca7bf.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nvar newData = {\r\n    data: [\r\n        {name: 'alex', profile: 'frontend developer'},\r\n        {name: 'Jason', profile: 'ROR developer'},\r\n        {name: 'Martin', profile: 'Content Writer'},\r\n        {name: 'Ricky', profile: 'Python developer'}\r\n    ],\r\n }\r\n \r\n var MyHOC = ComposedComponent => class extends Component {\r\n    componentDidMount() {\r\n       this.setState({\r\n          data: newData.data\r\n       });\r\n    }\r\n    render() {\r\n       return <ComposedComponent {...this.props} {...this.state} />;\r\n    }\r\n };\r\n\r\n\r\nclass MyComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() {\r\n        const empData = this.props.data;\r\n        return ( \r\n            <div>\r\n                <h3 className=\"title\">User Data</h3>\r\n               <div className=\"table-responsive\">\r\n                <table className=\"table table-dark table-bordered table-striped table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>S. No.</th>\r\n                            <th>Name</th>\r\n                            <th>Profile</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {empData && empData.map((item, index)=>{\r\n                            return (<tr key={index}>\r\n                                <td>{index+1}</td>\r\n                                <td>{item.name}</td>\r\n                                <td>{item.profile}</td>\r\n                            </tr>)\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n               </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MyHOC(MyComponent);","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nconst required = value => value ? undefined : 'Required';\r\n// const maxLength = max => value =>\r\n//   value && value.length > max ? `Must be ${max} characters or less` : undefined;\r\nconst lengthBetween = (min, max) => value => \r\n  value && (value.length <= min || value.length >= max) ? `Must be between ${min} to ${max}` : undefined;\r\n// const maxLength15 = maxLength(15);\r\n// const number = value => value && isNaN(Number(value)) ? 'Must be a number' : undefined;\r\n// const minValue = min => value =>\r\n//   value && value < min ? `Must be at least ${min}` : undefined;\r\n// const minValue18 = minValue(18);\r\nconst email = value => value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ?\r\n  'Invalid email address' : undefined;\r\n// const tooOld = value =>\r\n//   value && value > 65 ? 'You might be too old for this' : undefined;\r\n\r\n\r\nconst renderField = ({ input, label, type, className, meta: { touched, error, warning } }) => (\r\n  <div>\r\n    <label>{label}</label>\r\n    <div>\r\n      <input className={className} {...input} placeholder={label} type={type}/>\r\n      {touched && ((error && <span className=\"text-danger\">{error}</span>) || (warning && <span className=\"text-warning\">{warning}</span>))}\r\n    </div>\r\n  </div>\r\n)\r\n\r\nlet ContactForm = props => {\r\n  const { handleSubmit, submitting } = props\r\n  return (\r\n    <React.Fragment>\r\n        <h3 className=\"title\">Contact Form</h3>\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <Field \r\n                  type=\"text\" \r\n                  value=\"\" \r\n                  id=\"email\" \r\n                  name=\"email\" \r\n                  label=\"Email address\"\r\n                  component={renderField} \r\n                  validate={[email, required]}\r\n                  className=\"form-control\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <Field \r\n                  type=\"password\" \r\n                  component={renderField}\r\n                  name=\"password\" \r\n                  label=\"Password\"\r\n                  validate={[required, lengthBetween(8, 12)]}\r\n                  className=\"form-control\" \r\n                  id=\"password\" />\r\n            </div>\r\n            <div className=\"form-group form-check\">\r\n                <Field \r\n                  type=\"checkbox\" \r\n                  name=\"check\" \r\n                  component={renderField}\r\n                  className=\"form-check-input\" \r\n                  id=\"check\" />\r\n                <label className=\"form-check-label\" htmlFor=\"check\">Check me out</label>\r\n            </div>\r\n            <button type=\"submit\" disabled={submitting} className=\"btn btn-light\">Submit</button>\r\n        </form>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nContactForm = reduxForm({\r\n  // a unique name for the form\r\n  form: 'contact'\r\n})(ContactForm)\r\n\r\nexport default ContactForm","import React, { Component } from 'react';\r\nimport ContactForm from './contactForm';\r\n\r\nclass reduxForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {  }\r\n  }\r\n  handleSubmit = (val)=>{\r\n    alert(JSON.stringify(val));\r\n  }\r\n  render() { \r\n    return ( \r\n      <div className=\"redux-form\">\r\n        <ContactForm onSubmit={this.handleSubmit} />\r\n      </div>\r\n     );\r\n  }\r\n}\r\n \r\nexport default reduxForm;","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { incrementCounterAction, decrementCounterAction } from '../../actions/index'\r\n\r\nclass Counter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"counter-container\">\r\n                <h3 className=\"title text-center\">Counter</h3>\r\n                <div className=\"counter-value-container\">\r\n                    <h3 className=\"counter-value\">{this.props.counterReducer}</h3>\r\n                </div>\r\n                <button onClick={()=>this.props.incrementCounterAction(1)}>+ Increment</button>\r\n                <button onClick={()=>this.props.decrementCounterAction(1)}>- Decrement</button>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    incrementCounterAction,\r\n    decrementCounterAction\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return state;\r\n}\r\n \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);","export const incrementCounterAction = (val)=>{\r\n    return {\r\n        type: 'INCREMENT',\r\n        payload: val\r\n    }\r\n}\r\n\r\nexport const decrementCounterAction = (val)=>{\r\n    return {\r\n        type: 'DECREMENT',\r\n        payload: val\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nclass Child extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            childData: ''\r\n         }\r\n    }\r\n    render() { \r\n        return ( \r\n            <div className=\"prop-data-container\">\r\n                <h3>Child</h3>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\">Data to Parent</label>\r\n                    <input type=\"text\" className=\"form-control\" onKeyUp={(e)=>{this.props.childHandler(e.target.value)}} placeholder=\"Enter text here...\" />\r\n                </div>\r\n                <h4>Data from parent : {this.props.parentData}</h4>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Child;","import React, { Component } from 'react';\r\n\r\nimport Child from './child';\r\n\r\nclass Parent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            parentData: '',\r\n            childData: ''\r\n         }\r\n    }\r\n\r\n    dataToChild(val){\r\n        this.setState({\r\n            parentData: val\r\n        })\r\n    }\r\n\r\n    dataFromChild(val){\r\n        this.setState({\r\n            childData: val\r\n        })\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <>\r\n                <div className=\"prop-data-container\">\r\n                    <h3>Parent</h3>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Data to Child</label>\r\n                        <input type=\"text\" className=\"form-control\" onKeyUp={(e)=>{this.dataToChild(e.target.value)}} placeholder=\"Enter text here...\" />\r\n                    </div>\r\n                    <h4>Data from child : {this.state.childData}</h4>\r\n                </div>\r\n                <Child parentData={this.state.parentData} childHandler={(e)=>this.dataFromChild(e)} />\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Parent;","import React, { Component } from 'react';\r\n\r\nimport Parent from './parent';\r\n\r\nclass PropsSharing extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return ( \r\n            <>\r\n                <h3 className=\"title\">Props Sharing</h3>\r\n                <Parent />\r\n\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default PropsSharing;","import React, { Component } from 'react';\r\n\r\nclass Ref extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.inputRef = React.createRef();\r\n        this.state = {  }\r\n    }\r\n\r\n    focusInput(){\r\n        this.inputRef.current.focus();\r\n    }\r\n    \r\n    render() { \r\n        return ( \r\n            <div className=\"ref-container\">\r\n                <h3 className=\"title\">Focus Input</h3>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\">Focus</label>\r\n                    <input type=\"text\" ref={this.inputRef} className=\"form-control\" />\r\n                </div>\r\n                <button className=\"btn btn-light\" onClick={()=>this.focusInput()}>Focus Input</button>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Ref;","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n\n// bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReduxForm from './components/reduxForm/reduxForm';\nimport { Route, NavLink, BrowserRouter as Router } from 'react-router-dom';\n\nimport HOC from './components/HOC/HOC';\nimport Counter from './components/counter/counter';\nimport PropsSharing from './components/propsSharing/propsSharing';\nimport Ref from './components/ref/ref';\n\n\n\n// import Button from 'react-bootstrap/Button';\n\nclass App extends React.Component {\n\n  submitForm = values => {\n    // print the form values to the console\n    console.log(values)\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <div className=\"routing\">\n          <Router>\n            <ul className=\"routing-list\">\n              <li>\n                <NavLink activeClassName=\"active\" to=\"/ReduxForm\">Redux Form</NavLink>\n              </li>\n              <li>\n                <NavLink activeClassName=\"active\" to=\"/HOC\">HOC</NavLink>\n              </li>\n              <li>\n                <NavLink activeClassName=\"active\" to=\"/counter\">State Management using Redux</NavLink>\n              </li>\n              <li>\n                <NavLink activeClassName=\"active\" to=\"/propsSharing\">Props Sharing</NavLink>\n              </li>\n              <li>  \n                <NavLink activeClassName=\"active\" to=\"/ref\">Refs</NavLink>\n              </li>\n            </ul>\n            \n            <div className=\"container\">\n              <div className=\"row justify-content-center\">\n                <div className=\"col-md-6\">\n                    <Route path=\"/ReduxForm\" component={ReduxForm} />\n                </div>\n              </div>\n              <Route path=\"/HOC\" component={HOC} />\n              <Route path=\"/counter\" component={Counter} />\n              <Route path=\"/propsSharing\" component={PropsSharing} />\n              <Route path=\"/ref\" component={Ref} />\n            </div>\n          </Router>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// redux form\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport { combineReducers } from 'redux';\r\nimport { counterReducer } from './counterReducer';\r\n\r\nconst rootReducers = combineReducers({\r\n    form: formReducer,\r\n    counterReducer\r\n});\r\n\r\nexport default rootReducers;\r\n\r\n","const counterReducer = (state=0, action)=>{\r\n    switch(action.type){\r\n        case 'INCREMENT':\r\n            return state + action.payload;\r\n        case 'DECREMENT':\r\n            return state - action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport { counterReducer };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nimport {createStore} from 'redux';\n\nimport rootReducer from './reducers/index';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(rootReducer);\n\nstore.subscribe(()=>{\n    // console.log(store.getState());\n})\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}